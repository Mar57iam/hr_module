"use client"
import "./globals.css";
import React, { useContext, useEffect, useState } from 'react';
import TranslationContext from "./_Components/TranslationProvider/TranslationContextProvider.jsx";
import AuthContextProvider, { AuthContext } from "@/Context/AuthContext";
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import ReactQueryProvider from "./_Components/ReactQ/ReactQuery";
import { Toaster } from "react-hot-toast";
import Sidebar from "./_Components/Sidebar/Sidebar";
import FixRoute from "./_Components/ProutectedRoute/Protected";
import Navbar from "./_Components/Navbar/Navbar";
import { useTranslation } from "react-i18next";


// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

let query = new QueryClient()

export default function RootLayout({ children }) {
  const { lang } = useTranslation()
  const [rtl, setRtl] = useState(lang)
  useEffect(() => {
    setRtl(lang === 'ar')
  }, [lang])

  return (
    <html dir={rtl ? "rtl" : "ltr"} lang="en">
      <body
      // className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthContextProvider>
          <TranslationContext>
            {/* <Navbar/> */}
            <Sidebar />
            <ReactQueryProvider>
              <Toaster position="top-center" reverseOrder={false} />

              <FixRoute>
                {children}
              </FixRoute>

            </ReactQueryProvider>
          </TranslationContext>
        </AuthContextProvider>

      </body>
    </html>
  );
}
