"use client"
import "./globals.css";
import React, { useContext, useEffect, useState } from 'react';
import TranslationProvider from "./_Components/TranslationProvider/TranslationProvider";
import AuthContextProvider, { AuthContext } from "@/Context/AuthContext";
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import ReactQueryProvider from "./_Components/ReactQ/ReactQuery";
import { Toaster } from "react-hot-toast";
import Sidebar from "./_Components/Sidebar/Sidebar";
import ProtectRoute from "./_Components/ProutectedRoute/Protected";
import Navbar from "./_Components/Navbar/Navbar";


// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

let query = new QueryClient()

export default function RootLayout({ children }) {
  const [user, setUser] = useState(null);

  useEffect(() => {
    setUser(localStorage.getItem("user"))
    return () => setUser(null)
  }, [])
  return (
    <html lang="en">
      <body
      // className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >

        <AuthContextProvider>
          <TranslationProvider>
            {/* <Navbar/> */}
            {user ?
              <Sidebar />
              : <></>
            }
            <ReactQueryProvider>
              <Toaster position="top-center" reverseOrder={false} />
              <ProtectRoute>
                {children}
              </ProtectRoute>
            </ReactQueryProvider>
          </TranslationProvider>
        </AuthContextProvider>

      </body>
    </html>
  );
}
